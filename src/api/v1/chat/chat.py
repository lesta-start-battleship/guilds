import asyncio
from fastapi import WebSocketDisconnect, Depends, APIRouter, WebSocket
from fastapi.encoders import jsonable_encoder
from sqlalchemy.ext.asyncio import AsyncSession

from db.database import get_db
from dependencies.chat import mongo_repo
from services.chat_service import get_member
from utils.chat_util import manager

router = APIRouter()

active_connections = {}


@router.websocket("/ws/guild/{guild_id}/{user_id}")
async def guild_chat_ws(
        guild_id: int,
        user_id: int,
        websocket: WebSocket,
        db: AsyncSession = Depends(get_db)
):
    print(f"üì° [CONNECT] –ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: guild_id={guild_id}, user_id={user_id}")

    try:
        await websocket.accept()
        print("‚úÖ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø—Ä–∏–Ω—è—Ç–æ")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –ø—Ä–∏–Ω—è—Ç—å WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: {e}")
        return

    try:
        member = await get_member(db, user_id, guild_id)
        if not member:
            print("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –≥–∏–ª—å–¥–∏–∏ –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç –¥–æ—Å—Ç—É–ø–∞")
            await websocket.send_json({"error": "Access denied: you are not a member of this guild."})
            await websocket.close()
            return
        print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω –∫–∞–∫ —É—á–∞—Å—Ç–Ω–∏–∫ –≥–∏–ª—å–¥–∏–∏")

        await manager.connect(guild_id, websocket)
        print("‚úÖ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ –≤ –º–µ–Ω–µ–¥–∂–µ—Ä –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
        try:
            history = await mongo_repo.get_messages_by_guild(guild_id)
            await asyncio.sleep(0.1)
            await websocket.send_json({
                "type": "history",
                "data": jsonable_encoder(history)
            })
            print(f"üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (–∫–æ–ª-–≤–æ: {len(history)})")
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:", e)

        # –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
        while True:
            data = await websocket.receive_json()
            print("üì© –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:", data)

            message_data = {
                "guild_id": guild_id,
                "user_id": data["user_id"],
                "user_name": data["user_name"],
                "content": data["content"],
            }

            try:
                saved = await mongo_repo.save_message(message_data)
                print("‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", saved)
                await manager.broadcast(guild_id, jsonable_encoder(saved))
                print("üì¢ –°–æ–æ–±—â–µ–Ω–∏–µ —Ä–∞–∑–æ—Å–ª–∞–Ω–æ –≤—Å–µ–º –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–º –∫–ª–∏–µ–Ω—Ç–∞–º")
            except Exception as e:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏/—Ä–∞—Å—Å—ã–ª–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:", e)

    except WebSocketDisconnect:
        print("üîå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è")
    except Exception as e:
        print("‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ WebSocket:", e)
    finally:
        manager.disconnect(guild_id, websocket)
        print("üßπ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞")
