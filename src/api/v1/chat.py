import asyncio

from fastapi import WebSocketDisconnect
from fastapi import APIRouter, WebSocket
from services.mongo_instance import mongo_repo
from fastapi.encoders import jsonable_encoder

router = APIRouter()

active_connections = {}


@router.websocket("/ws/guild/{guild_id}/{user_id}")
async def guild_chat_ws(guild_id: int, user_id: int, websocket: WebSocket):
    await websocket.accept()
    repo = mongo_repo

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è –≥–∏–ª—å–¥–∏–∏
    if guild_id not in active_connections:
        active_connections[guild_id] = []
    active_connections[guild_id].append(websocket)

    try:
        history = await repo.get_messages_by_guild(guild_id)
        print("üìú –ò—Å—Ç–æ—Ä–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π:", history)  # –õ–æ–≥–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π
        await asyncio.sleep(0.1)
        await websocket.send_json({
            "type": "history",
            "data": jsonable_encoder(history)
        })
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏—Å—Ç–æ—Ä–∏–∏:", e)

    try:
        while True:
            data = await websocket.receive_json()
            print("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞:", data)

            message_data = {
                "guild_id": guild_id,
                "user_id": data["user_id"],
                "user_name": data["user_name"],
                "content": data["content"],
            }

            try:
                saved = await repo.save_message(message_data)
                print("–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:", saved)
            except Exception as e:
                print("–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –≤ Mongo:", e)
                continue

            for conn in active_connections.get(guild_id, []):
                try:
                    await conn.send_json(jsonable_encoder(saved))
                except Exception as e:
                    print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–ª–∏–µ–Ω—Ç—É:", e)

    except WebSocketDisconnect:
        print("üîå –ö–ª–∏–µ–Ω—Ç –æ—Ç–∫–ª—é—á–∏–ª—Å—è")
    except Exception as e:
        print("‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞:", e)
    finally:
        try:
            active_connections[guild_id].remove(websocket)
            print("üßπ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É–¥–∞–ª–µ–Ω–æ –∏–∑ —Å–ø–∏—Å–∫–∞ active_connections")
        except (KeyError, ValueError):
            pass

