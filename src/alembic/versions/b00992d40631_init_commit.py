"""init commit

Revision ID: b00992d40631
Revises: 
Create Date: 2025-07-05 19:17:29.881031

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b00992d40631'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    from sqlalchemy.dialects import postgresql
    
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('guild_war_requests_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_id', sa.Integer(), nullable=False),
    sa.Column('initiator_guild_id', sa.Integer(), nullable=True),
    sa.Column('target_guild_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'active', 'finished', 'declined', 'canceled', 'expired', name='warstatus'), nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guild_war_requests_history_id'), 'guild_war_requests_history', ['id'], unique=False)
    op.create_index(op.f('ix_guild_war_requests_history_initiator_guild_id'), 'guild_war_requests_history', ['initiator_guild_id'], unique=False)
    op.create_index(op.f('ix_guild_war_requests_history_request_id'), 'guild_war_requests_history', ['request_id'], unique=False)
    op.create_index(op.f('ix_guild_war_requests_history_target_guild_id'), 'guild_war_requests_history', ['target_guild_id'], unique=False)
    op.create_table('guilds',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tag', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_full', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guilds_id'), 'guilds', ['id'], unique=False)
    op.create_index(op.f('ix_guilds_tag'), 'guilds', ['tag'], unique=True)
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('permission', sa.Enum('owner', 'invite_members', 'kick_members', 'promote_members', 'wars', name='permission'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('guild_chat_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guild_chat_messages_guild_id'), 'guild_chat_messages', ['guild_id'], unique=False)
    op.create_index(op.f('ix_guild_chat_messages_id'), 'guild_chat_messages', ['id'], unique=False)
    op.create_index(op.f('ix_guild_chat_messages_user_id'), 'guild_chat_messages', ['user_id'], unique=False)
    op.create_table('guild_war_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('initiator_guild_id', sa.Integer(), nullable=True),
    sa.Column('target_guild_id', sa.Integer(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'active', 'finished', 'declined', 'canceled', 'expired', name='warstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['initiator_guild_id'], ['guilds.id'], ),
    sa.ForeignKeyConstraint(['target_guild_id'], ['guilds.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_guild_war_requests_id'), 'guild_war_requests', ['id'], unique=False)
    op.create_table('members',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('guild_id', sa.Integer(), nullable=True),
    sa.Column('guild_tag', sa.String(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.Column('user_name', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['guild_id'], ['guilds.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_members_id'), 'members', ['id'], unique=False)
    op.create_index(op.f('ix_members_user_id'), 'members', ['user_id'], unique=False)
    op.create_index(op.f('ix_members_user_name'), 'members', ['user_name'], unique=True)
    op.create_table('role_permission',
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['permissions.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('role_id', 'permission_id')
    )
    # ### end Alembic commands ###


    # ### add permissions ###
    from sqlalchemy.sql import table, column
    from sqlalchemy import String
    from sqlalchemy.dialects import postgresql

    permissions_table = table(
        'permissions',
        column('permission', String),
    )

    op.execute("""
        INSERT INTO permissions (permission) VALUES
        ('owner'::permission),
        ('invite_members'::permission),
        ('kick_members'::permission),
        ('promote_members'::permission),
        ('wars'::permission);
    """)

    # ### end add permissions ###


    # ### add roles ###
    op.execute("INSERT INTO roles (title) VALUES ('owner'), ('cabin_boy'), ('officer');")

    op.execute("""
        INSERT INTO role_permission (role_id, permission_id)
        SELECT r.id, p.id FROM roles r, permissions p WHERE r.title = 'owner';
        """)
    
    op.execute("""    
        INSERT INTO role_permission (role_id, permission_id)
        SELECT r.id, p.id FROM roles r, permissions p
        WHERE r.title = 'officer' AND p.permission IN ('invite_members', 'kick_members', 'promote_members')
    """)
   # ### end add roles ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('role_permission')
    op.drop_index(op.f('ix_members_user_name'), table_name='members')
    op.drop_index(op.f('ix_members_user_id'), table_name='members')
    op.drop_index(op.f('ix_members_id'), table_name='members')
    op.drop_table('members')
    op.drop_index(op.f('ix_guild_war_requests_id'), table_name='guild_war_requests')
    op.drop_table('guild_war_requests')
    op.drop_index(op.f('ix_guild_chat_messages_user_id'), table_name='guild_chat_messages')
    op.drop_index(op.f('ix_guild_chat_messages_id'), table_name='guild_chat_messages')
    op.drop_index(op.f('ix_guild_chat_messages_guild_id'), table_name='guild_chat_messages')
    op.drop_table('guild_chat_messages')
    op.drop_table('roles')
    op.drop_table('permissions')
    op.drop_index(op.f('ix_guilds_tag'), table_name='guilds')
    op.drop_index(op.f('ix_guilds_id'), table_name='guilds')
    op.drop_table('guilds')
    op.drop_index(op.f('ix_guild_war_requests_history_target_guild_id'), table_name='guild_war_requests_history')
    op.drop_index(op.f('ix_guild_war_requests_history_request_id'), table_name='guild_war_requests_history')
    op.drop_index(op.f('ix_guild_war_requests_history_initiator_guild_id'), table_name='guild_war_requests_history')
    op.drop_index(op.f('ix_guild_war_requests_history_id'), table_name='guild_war_requests_history')
    op.drop_table('guild_war_requests_history')
    # ### end Alembic commands ###

    op.execute("DELETE FROM permissions")

    op.execute("DELETE FROM role_permission")
    op.execute("DELETE FROM roles")
    
